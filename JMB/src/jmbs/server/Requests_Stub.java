// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package jmbs.server;

public final class Requests_Stub
    extends java.rmi.server.RemoteStub
    implements jmbs.common.RemoteServer, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_connectUser_0;
    private static java.lang.reflect.Method $method_somme_1;
    
    static {
	try {
	    $method_connectUser_0 = jmbs.common.RemoteServer.class.getMethod("connectUser", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_somme_1 = jmbs.common.RemoteServer.class.getMethod("somme", new java.lang.Class[] {int.class, int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public Requests_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of connectUser(String, String)
    public jmbs.common.User connectUser(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_connectUser_0, new java.lang.Object[] {$param_String_1, $param_String_2}, 3795726469498082585L);
	    return ((jmbs.common.User) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of somme(int, int)
    public int somme(int $param_int_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_somme_1, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2)}, 8581032692834166412L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
